{
  "plugins": ["prettier", "@typescript-eslint", "react-hooks", "unicorn"],
  "extends": [
    "airbnb-typescript",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint",
    "prettier",
    "plugin:import/typescript",
    "plugin:react/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "webpack": {
        "config": "webpack.config.js"
      }
    }
  },
  "rules": {
    // create react app default rules
    "object-curly-spacing": ["warn", "always"],
    "no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "none"
      }
    ],

    // TypeScript rules
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        // if true, only functions which are part of a declaration will be checked
        "allowExpressions": true,
        // if true, type annotations are also allowed on the variable of a function expression rather than on the function directly
        "allowTypedFunctionExpressions": true,
        // if true, functions immediately returning another function expression will not be checked
        "allowHigherOrderFunctions": false
      }
    ],
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "none"
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error",
      {
        "ignoreRestArgs": true
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 80,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true
      }
    ],

    // React rules:
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/prop-types": "off",
    "react/prefer-es6-class": ["error", "never"],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-curly-brace-presence": ["error", "never"],
    "react/display-name": "off",
    "react/jsx-key": "error",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-boolean-value": "off",
    "react/no-unescaped-entities": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-wrap-multilines": "off",
    "react/destructuring-assignment": "off",

    // unicorn
    // https://github.com/sindresorhus/eslint-plugin-unicorn
    "unicorn/no-abusive-eslint-disable": "error",
    "unicorn/no-array-instanceof": "error",
    "unicorn/prefer-includes": "error",
    "unicorn/no-unsafe-regex": "off",
    "unicorn/throw-new-error": "error",
    "unicorn/regex-shorthand": "error",
    "unicorn/filename-case": [
      "error",
      {
        "case": "kebabCase"
      }
    ],

    // Imports
    "import/extensions": ["error", "never", { "svg": "always" }],
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.test.tsx",
          "**/*.spec.tsx",
          "**/__test__/*"
        ]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before",
          },
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true,
        }
      }
    ],


    // ESLint rules
    "global-require": "off",
    "no-plusplus": "off",
    "complexity": ["error", { "max": 12 }],
    "max-depth": ["error", { "max": 3 }],
    "max-nested-callbacks": ["error", { "max": 2 }],
    "max-params": ["error", { "max": 3 }],
    "max-statements": ["error", { "max": 12 }],
    "arrow-body-style": ["error", "as-needed"],
    "object-property-newline": [
      "error",
      { "allowAllPropertiesOnSameLine": false }
    ],
  },
  "overrides": [
    {
      "files": [
        "*/**/*.{spec,test}.{ts,tsx}",
        "**/__mocks__/*.{ts,tsx}",
        "**/__test__/*.{ts,tsx}"
      ],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-ts-ignore": "off"
      }
    },
    {
      "files": ["*/**/*.js"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      },
    }
  ]
}
